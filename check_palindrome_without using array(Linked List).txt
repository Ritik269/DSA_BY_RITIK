struct node * getmiddle(struct node * head)
{
    struct node * slow=head;
    struct node * fast =head->next;
    while(fast!=NULL && fast->next!=NULL)
    {
        slow=slow->next;
        fast=fast->next->next;


    }
     return slow;



};
struct node * reversell(struct node * head)
{


    struct node * curr=head;
    struct node * prev=NULL;
    struct node * next=NULL;
    while(curr!=NULL)
    {
        next=curr->next;
        curr->next=prev;
        prev=curr;
        curr=next;


    }
     return prev;


};

bool checkpalindrome(struct node * head)
{
   if(head==NULL && head->next==NULL)
   {
       return false;
   }
   struct node * middle=getmiddle(head);
   struct node * temp=middle->next;
   temp=reversell(temp);
   struct node * head1=head;
   struct node * head2=temp;
   while(head2!=NULL)
   {
       if(head1->data!=head2->data)
       {
           return false;
       }
       head1=head1->next;
       head2=head2->next;


       return true;
   }



}